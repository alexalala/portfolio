{"version":3,"sources":["styles/assets/me.svg","layouts/PageWrapper.jsx","pages/Home.js","styles/variables.js","pages/About.js","components/Subheader.js","pages/Contact.js","layouts/Main.jsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PlainPageWrapper","react_default","a","createElement","className","this","props","children","Component","PageWrapper","styled","_templateObject","Triangle","div","Home_templateObject","Typed","Typist","_templateObject2","Home","layouts_PageWrapper","About","src","require","alt","AboutStyled","About_templateObject","Subheader","Subheader_templateObject","Contact","components_Subheader","action","method","type","name","rows","cols","value","styledContact","Contact_templateObject","Main","react","pages_Home","pages_About","pages_Contact","App","es","exact","path","component","injectGlobal","App_templateObject","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cab09879.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.e9eff1a6.svg\";","import React, {  Component} from 'react';\nimport styled from 'styled-components';\n\nclass PlainPageWrapper extends Component {\n  render() {\n    return (\n      <div className={this.props.className}>\n        { this.props.children }\n      </div>\n    );\n  };\n};\n\nconst PageWrapper = styled(PlainPageWrapper)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: center;\n  margin-left: 10%;\n  width: 80%;\n`;\n\nexport default PageWrapper;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Typist from 'react-typist';\n\nimport 'react-typist/dist/Typist.css';\nimport { primary_colour, white } from '../styles/variables.js';\nimport PageWrapper from '../layouts/PageWrapper.jsx';\n\nconst Triangle = styled.div`\n  border-left: 50vw solid ${white};\n  border-right: 50vw solid ${white};\n  border-top: 100px solid ${primary_colour};\n`;\n\nconst Typed = styled(Typist)`\n  align-items: center;\n  display: flex;\n  height: 90vh;\n  font-size: 4rem;\n`;\n\nclass Home extends Component {\n  render() {\n    return (\n      <PageWrapper>\n        <Typed>\n          Hey, I&lsquo;m Alexandra.\n        </Typed>\n        <Triangle></Triangle>\n      </PageWrapper>\n    );\n  };\n};\n\nexport default Home;\n","/* COLOURS */\nexport const black = '#000';\nexport const white = '#fff';\n\nexport const primary_colour = '#febcc8';\nexport const secondary_colour = '#4d8c1e';\nexport const tertiary_colour = '#ff9c9c';\n\n/* FONTS */\nexport const primary_font = '\"Raleway\", sans-serif';\nexport const secondary_font = '\"Playfair Display\", serif';\nexport const tertiary_font = '\"EB Garamond\", serif';\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport { tertiary_colour, tertiary_font } from '../styles/variables.js';\nimport PageWrapper from '../layouts/PageWrapper.jsx';\n\nclass About extends Component {\n  render() {\n    return (\n      <PageWrapper className={this.props.className}>\n        <img src={require('../styles/assets/me.svg')} alt=\"myself\"></img>\n        <p>I&lsquo;m Alexandra. A front-end web developer based in Norwich.</p>\n      </PageWrapper>\n    );\n  };\n};\n\nconst AboutStyled = styled(About)`\n  img {\n    height: 13rem\n  }\n\n  p {\n    color: ${tertiary_colour};\n    font-family: ${tertiary_font};\n    font-size: 1.5rem;\n  }\n`;\n\nexport default AboutStyled;\n","import styled from 'styled-components';\n\nconst Subheader = styled.p`\n  margin: 2rem 0;\n  text-align: center;\n`;\n\nexport default Subheader;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nimport { primary_colour, white } from '../styles/variables.js';\nimport Subheader from '../components/Subheader.js';\nimport PageWrapper from '../layouts/PageWrapper.jsx';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <PageWrapper className={this.props.className}>\n        <Subheader>Feel free to get in touch!</Subheader>\n        <form action=\"https://formspree.io/contact@alexandramoo.re\" method=\"POST\">\n          <label>\n            Your name:\n            <input type=\"text\" name=\"name\"></input>\n          </label>\n          <label>\n            Your email:\n            <input type=\"email\" name=\"_replyto\"></input>\n          </label>\n          <label>\n            Description:\n            <textarea rows=\"3\" cols=\"3\" name=\"description\"></textarea>\n          </label>\n          <input type=\"submit\" value=\"Send\"></input>\n        </form>\n      </PageWrapper>\n    );\n  };\n};\n\nconst styledContact = styled(Contact)`\n  background-color: ${primary_colour};\n  margin: 0;\n  width 100%;\n\n  input {\n    box-sizing: border-box;\n    width: 100%;\n    background-color: ${white};\n    display: block;\n    margin: 1rem 0;\n    padding: 1rem;\n  }\n\n  form {\n    width: 70%;\n  }\n\n  textarea {\n    box-sizing: border-box;\n    width: 100%;\n    background-color: ${white};\n    display: block;\n    margin: 1rem 0;\n    padding: 1rem;\n  }\n`;\n\nexport default styledContact;\n","import React, { Component, Fragment } from 'react';\n\nimport Home from '../pages/Home.js';\nimport About from '../pages/About.js';\nimport Contact from '../pages/Contact.js';\n\nclass Main extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Home />\n        <About />\n        <Contact />\n      </Fragment>\n    );\n  };\n};\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { injectGlobal } from 'styled-components';\n\nimport Main from './layouts/Main.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Main} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n/* GLOBAL STYLES */\ninjectGlobal`\n  .App {\n    box-sizing: border-box;\n    text-align: center;\n    background-color: #febcc8;\n    font-family: \"Raleway\", sans-serif;\n    color: #fff;\n    height: 100%;\n  }\n`;\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}